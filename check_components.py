#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ LogoMaster Pro –±–µ–∑ GUI
"""

import sys
import os

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    print(f"Python –≤–µ—Ä—Å–∏—è: {sys.version}")
    if sys.version_info >= (3, 8):
        print("‚úì –í–µ—Ä—Å–∏—è Python –ø–æ–¥—Ö–æ–¥–∏—Ç")
        return True
    else:
        print("‚úó –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        return False

def check_imports():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π"""
    modules = {
        'tkinter': 'Tkinter GUI',
        'PIL': 'Pillow (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)',
        'numpy': 'NumPy (–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏)',
        'requests': 'Requests (HTTP –∑–∞–ø—Ä–æ—Å—ã)',
        'json': 'JSON (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π)',
        'threading': 'Threading (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π)',
        'os': 'OS (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π)',
        'sys': 'Sys (–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π)'
    }
    
    success = True
    for module, description in modules.items():
        try:
            __import__(module)
            print(f"‚úì {module} - {description}")
        except ImportError as e:
            print(f"‚úó {module} - {description} - –û–®–ò–ë–ö–ê: {e}")
            success = False
    
    return success

def check_project_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"""
    required_files = [
        'main.py',
        'config.py', 
        'image_processor.py',
        'ui_components.py',
        'utils.py',
        'requirements.txt'
    ]
    
    success = True
    for file in required_files:
        if os.path.exists(file):
            size = os.path.getsize(file)
            print(f"‚úì {file} ({size} –±–∞–π—Ç)")
        else:
            print(f"‚úó {file} - –û–¢–°–£–¢–°–¢–í–£–ï–¢")
            success = False
    
    return success

def check_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        import config
        print(f"‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        print(f"  - –ù–∞–∑–≤–∞–Ω–∏–µ: {config.APP_CONFIG.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
        print(f"  - –í–µ—Ä—Å–∏—è: {config.APP_CONFIG.get('version', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
        return True
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def check_image_processor():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    try:
        from image_processor import ImageProcessor
        processor = ImageProcessor()
        print("‚úì ImageProcessor —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è ImageProcessor: {e}")
        return False

def check_utils():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç"""
    try:
        import utils
        print("‚úì –ú–æ–¥—É–ª—å utils –∑–∞–≥—Ä—É–∂–µ–Ω")
        # –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π
        test_size = utils.format_file_size(1024)
        print(f"  - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞: {test_size}")
        return True
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ utils: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("=" * 60)
    print("–ü–†–û–í–ï–†–ö–ê –ö–û–ú–ü–û–ù–ï–ù–¢–û–í LOGOMASTER PRO")
    print("=" * 60)
    
    checks = [
        ("–í–µ—Ä—Å–∏—è Python", check_python_version),
        ("–ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π", check_imports),
        ("–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞", check_project_files),
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", check_config),
        ("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", check_image_processor),
        ("–£—Ç–∏–ª–∏—Ç—ã", check_utils)
    ]
    
    results = []
    for name, check_func in checks:
        print(f"\n--- {name} ---")
        try:
            result = check_func()
            results.append(result)
        except Exception as e:
            print(f"‚úó –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            results.append(False)
    
    print("\n" + "=" * 60)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò")
    print("=" * 60)
    
    passed = sum(results)
    total = len(results)
    
    for i, (name, _) in enumerate(checks):
        status = "‚úì –ü–†–û–ô–î–ï–ù–û" if results[i] else "‚úó –û–®–ò–ë–ö–ê"
        print(f"{name}: {status}")
    
    print(f"\n–ò—Ç–æ–≥–æ: {passed}/{total} –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("\nüéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É: python main.py")
    else:
        print(f"\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ {total - passed} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö")
        print("–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç—Ä–∞–Ω–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")
    
    return passed == total

if __name__ == "__main__":
    try:
        success = main()
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)